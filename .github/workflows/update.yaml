name: 更新每日论文workFlow

on:
  schedule:
    - cron: '0 16 * * *'  # UTC 16:00 (+8即为北京时间 00:00)
  workflow_dispatch:    # 允许手动触发
  push:                # 在推送时触发
    branches:
      - main        # 只在推送到 main 分支时触发

permissions:
  contents: write
  issues: write

env:
  BIN_PATH: target/release/my_auto_papers.exe

jobs:
  update_daily_papers:
    runs-on: windows-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 设置 Rust 环境
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: 缓存 Cargo 依赖
      uses: actions/cache@v3
      id: cargo-cache
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
          target/release/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: 安装并缓存 Just
      uses: actions/cache@v3
      id: just-cache
      with:
        path: |
          C:\Users\runneradmin\.cargo\bin\just.exe
          C:\Users\runneradmin\.cargo\.package-cache
        key: ${{ runner.os }}-just-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-just-

    - name: 安装 Just 工具
      if: steps.just-cache.outputs.cache-hit != 'true'
      run: |
        cargo install just --force
        echo "C:\Users\runneradmin\.cargo\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: 检查缓存的可执行文件
      id: check-bin
      shell: pwsh
      run: |
        $exists = Test-Path -Path "${{ env.BIN_PATH }}"
        Write-Output "exists_bin=$exists" >> $env:GITHUB_OUTPUT
        Write-Host "Executable exists: $exists"

    - name: 若无缓存，则构建Release版本
      if: steps.cargo-cache.outputs.cache-hit != 'true' || steps.check-bin.outputs.exists_bin != 'true'
      run: cargo build --release

    - name: 运行每日更新
      run: just run "${{ env.BIN_PATH }}"

    - name: 提交更改
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: '✏️自动更新论文'
        file_pattern: 'README.md .github/ISSUE_TEMPLATE.md'
        push_options: '--force'

    - name: 创建 Issue 通知
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        update_existing: true
